/*
 * Copyright (C) 2022 Henrique Pereira/Hlcpereira
 *
 * This file has been auto generated by the .NET Core CLI and modified
 * All the changes made are under the license below.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

using System;
using Microsoft.AspNetCore.Builder;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.OpenApi.Models;

using Hlcpereira.GeoLocalizer.CrossCutting.Configs;
using Hlcpereira.GeoLocalizer.Domain.AppServices;
using Hlcpereira.GeoLocalizer.Domain.AppServices.Contracts;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.

var services = builder.Services;

services.Configure<GoogleApiConfig>(
    builder.Configuration.GetSection(GoogleApiConfig.GApiConfig));

var GoogleApiConfigInstance = (GoogleApiConfig) Activator.CreateInstance(typeof(GoogleApiConfig));
builder.Configuration.Bind(GoogleApiConfigInstance?.GetType().Name, GoogleApiConfigInstance);
if (GoogleApiConfigInstance != null) builder.Services.AddSingleton(GoogleApiConfigInstance);

services.AddScoped<IGeoLocalizationService, GeoLocalizationService>();
services.AddControllers();
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
services.AddEndpointsApiExplorer();
services.AddSwaggerGen(c =>
    {
        c.SwaggerDoc("GeoLocation", new OpenApiInfo { Title = "General Geolocation", Version = "v1" });
    }
);
services.AddSwaggerGen(c =>
{
    c.CustomSchemaIds(type => type.ToString());
});

var app = builder.Build();
var env = app.Environment;

// Configure the HTTP request pipeline.
app.UseSwagger();
app.UseSwaggerUI(c =>
{
    c.SwaggerEndpoint("/swagger/GeoLocation/swagger.json", "Hlcpereira.GeoLocalizer.Api v1");
}
);

app.UseAuthorization();

app.MapControllers();

app.Run();
